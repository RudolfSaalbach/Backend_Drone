using System;
using System.Collections.Generic;
using System.Linq;
using System.Text.RegularExpressions;
using Microsoft.Extensions.Logging;

namespace AuraOrchestrator.DroneHost.Security
{
    /// <summary>
    /// Precise domain matching with eTLD+1 and suffix matching (ยง8)
    /// </summary>
    public interface IPreciseDomainMatcher
    {
        bool IsAllowed(string url, List<string> allowList, List<string> denyList);
        string GetRegistrableDomain(string url);
    }

    public class PreciseDomainMatcher : IPreciseDomainMatcher
    {
        private readonly ILogger<PreciseDomainMatcher> _logger;
        private readonly PublicSuffixList _publicSuffixList;

        public PreciseDomainMatcher(ILogger<PreciseDomainMatcher> logger)
        {
            _logger = logger;
            _publicSuffixList = new PublicSuffixList();
        }

        /// <summary>
        /// MUSS 8.2: Check if domain is allowed based on exact match or subdomain
        /// </summary>
        public bool IsAllowed(string url, List<string> allowList, List<string> denyList)
        {
            var domain = GetRegistrableDomain(url);
            if (string.IsNullOrEmpty(domain))
                return false;

            // Check deny list first (takes precedence)
            if (denyList != null)
            {
                foreach (var denied in denyList)
                {
                    if (IsMatchOrSubdomain(domain, denied))
                    {
                        _logger.LogDebug("Domain {Domain} blocked by deny rule {Rule}", domain, denied);
                        return false;
                    }